CMAKE_MINIMUM_REQUIRED(VERSION 2.4.5) # vxl requires this as of April 2008

# When building with CMake 2.6 request NEW behavior for some policies.
# This can be removed when the minimum required version is 2.6.
IF(COMMAND CMAKE_POLICY)
  CMAKE_POLICY(SET CMP0003 NEW) # skip old-style link compatibility
ENDIF(COMMAND CMAKE_POLICY)

# This is the iona private libraries project.
PROJECT(iona)

SET (LIBRARY_OUTPUT_PATH ${iona_BINARY_DIR}/lib CACHE PATH "Single output directory for building all libraries.")

FIND_PACKAGE(VXL)
IF(VXL_FOUND)
  # include the standard stuff, such as Dart test
  SET(VXL_PROVIDE_STANDARD_OPTIONS 1)
  INCLUDE(${VXL_CMAKE_DIR}/UseVXL.cmake)

  SET (LIBRARY_OUTPUT_PATH ${iona_BINARY_DIR}/lib/ CACHE PATH "Single output directory for building all libraries.")

  OPTION( BUILD_WITH_ITK "Build with ITK" ON)
  OPTION( BUILD_EXECUTABLES "Build executables" ON)

  # If needed, find an ITK built with system VXL.
  IF(BUILD_WITH_ITK)
    FIND_PACKAGE(ITK)
    IF(ITK_FOUND)
      IF(NOT ITK_USE_SYSTEM_VXL)
        MESSAGE(FATAL_ERROR "ITK must be built with ITK_USE_SYSTEM_VXL set ON.")
      ENDIF(NOT ITK_USE_SYSTEM_VXL)
      
      # only include this when needed
      # INCLUDE(${ITK_USE_FILE})
    ELSE(ITK_FOUND)
      MESSAGE(FATAL_ERROR "ITK is required.  Set ITK_DIR.")
    ENDIF(ITK_FOUND)
  ENDIF(BUILD_WITH_ITK)
  
  SUBDIRS( pht )
  
  IF( BUILD_EXECUTABLES )
    SUBDIRS( executables )
  ENDIF( BUILD_EXECUTABLES )

ELSE(VXL_FOUND)
  IF( VXL_BINARY_PATH )
    SET( VXL_DIR ${VXL_BINARY_PATH} )
    MESSAGE( "Use preferred VXL_DIR in place of VXL_BINARY_PATH" )
  ENDIF( VXL_BINARY_PATH )
ENDIF(VXL_FOUND)
